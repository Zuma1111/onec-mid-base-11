
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// Добавление "КонтактноеЛицо" на форму документа в соотвтетсвии с заданием
  ЭлементКонтактноеЛицо = Элементы.Вставить("КонтактноеЛицо", Тип ("ПолеФормы"), ,);
  ЭлементКонтактноеЛицо.ПутьКДанным = "Объект.КонтактноеЛицо";
  ЭлементКонтактноеЛицо.Вид  = ВидПоляФормы.ПолеВвода;
  ЭлементКонтактноеЛицо.Заголовок = "Контактное лицо";
  	//Конец добавления реквизита "КонтактноеЛицо" на форму
  	
  	//Добавлен новый реквизит формы "СогласаннаяСкидка" в соотвествии с заданием  
  ЭлементСогласованнаяСкидка = ЭтаФорма.Элементы.Добавить("ЭлементСогласованнаяСкидка", Тип("ПолеФормы"));
  ЭлементСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
  ЭлементСогласованнаяСкидка.ПутьКДанным = "Объект.СогласованнаяСкидка";
  ЭлементСогласованнаяСкидка.УстановитьДействие ("ПриИзменении", "ПриИзмененииСогласованнаяСкидка"); 
  //Конец добавления реквизита "СогласованнаяСкидка" на форму
  
  //Добавлена команда "ПересчетСкидки" на форму в соотвествии с заданием  
  Команда = Команды.Добавить("ПересчетСкидки");
  Команда.Заголовок = "Пересчет скидки";
  Команда.Действие = "ПересчетСкидкиКомандаИРеквизит";  
  КнопкаФормы = Элементы.Добавить("КнопкаПересчетСкидки", Тип ("КнопкаФормы"),ЭтотОбъект);
  КнопкаФормы.ИмяКоманды = "ПересчетСкидки";
  КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
  //Конец добавления команды "ПересчетСкидки" на форму
  
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСогласованнаяСкидка ()
  
  Если ЗначениеЗаполнено(Объект.Товары) ИЛИ ЗначениеЗаполнено(Объект.Услуги) Тогда 
    
    ЗадатьВопросОПродолжении();
    
  КонецЕсли;
КонецПроцедуры 

&НаКлиенте
Процедура ПересчетСкидкиКомандаИРеквизит ();
  
  Для Каждого  Товары Из Объект.Товары Цикл  
    
    РассчитатьСуммуСтроки (Товары);
    
  КонецЦикла;  
    
  Для Каждого Услуги Из Объект.Услуги Цикл 
        
    РассчитатьСуммуСтроки(Услуги);
    
  КонецЦикла;  
       
  РассчитатьСуммуДокумента();

КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗадатьВопросОПродолжении ()
  
  Режим = РежимДиалогаВопрос.ДаНет; 
  
  Ответ = Ждать ВопросАсинх("Хотите пересчитать табличную часть с учетом скидки?", Режим, 0); 
  
  Если Ответ =КодВозвратаДиалога.Да Тогда
    ПересчетСкидкиКомандаИРеквизит (); 
  КонецЕсли;
  КонецПроцедуры
  

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * (ТекущиеДанные.Цена - ТекущиеДанные.Цена * Объект.СогласованнаяСкидка/100);
	
	РассчитатьСуммуДокумента()
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
